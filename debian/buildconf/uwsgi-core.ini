# uWSGI build configuration is the simple INI file.

# uwsgi section contains common options for building of uWSGI binary and
# plugins
[uwsgi]

# Inherit build configuration from other configuration file with possible
# overriding or appending to option values
#
# = <string>/<bool>
inherit = false

# Support for alarm
#
# = auto/<bool>
alarm = auto

# String appended to uWSGI version
#
# = <string>/false
append_version = debian

# Asynchronous/evented operational mode support
# http://projects.unbit.it/uwsgi/wiki/AsyncSupport
#
# = <bool>
async = true

# Name of compiled uWSGI executable binary
#
# = <string>
bin_name = uwsgi-core

# Include extra debugging information into compiled uWSGI binary with enabling
# of debug output in logging
#
# = <bool>
debug = false

# Embed configuration file at given path into uWSGI binary.
# Embedded configuration will be used as default configuration of uWSGI.
# http://projects.unbit.it/uwsgi/wiki/EmbedFlask
#
# = <string>/false
embed_config = false

# Embed files (or whole directories) into uWSGI binary.
# http://projects.unbit.it/uwsgi/wiki/EmbedFlask
#
# = <list>/false
embed_files = false

# Provide embedded 'uwsgi' module for access to uWSGI API
# http://projects.unbit.it/uwsgi/wiki/EmbeddedModule
#
# = <bool>
embedded = true

# List of plugins to compile into uWSGI binary
#
# = <list>/false
embedded_plugins = false

# Event subsystem type
# Automatic choosing of event subsystem is based on OS type
#
# = auto/epoll/devpoll/port/kqueue
event = auto

# Event dispatcher support
# As for uWSGI 0.9.8, this is no-op option
#
# = <bool>
evdis = false

# File monitoring subsystem type
# Automatic choosing of file monitoring subsystem is based on OS type
#
# = auto/inotify/port/kqueue/none
filemonitor = auto

# Support for configuration files in INI format
# http://projects.unbit.it/uwsgi/wiki/INIFiles
#
# = <bool>
ini = true

# Support of JSON parsing (for configuration files in JSON format and
# communication to Mongrel2 via JSON)
#
# http://projects.unbit.it/uwsgi/wiki/Mongrel2
#
# = <bool>/auto
json = true

# Support for uWSGI configuring via LDAP
# http://projects.unbit.it/uwsgi/wiki/useLDAP
# In automatic mode enabling of option is based on presence of ldap.h header
# file
#
# = auto/<bool>
ldap = true

# Locking subsystem type
# Automatic choosing of locking subsystem is based on OS type
#
# = auto/pthread_mutex/umtx/osx_spinlock/flock
locking = auto

# Library of utilized memory allocator implementation
# uWSGI will be linked with specified library
#
# = libc/tcmalloc/jemalloc
malloc_implementation = libc

# Support of multiple interpreters mode (allowing to isolate applications
# living in the same uWSGI process)
#
# = <bool>
minterpreters = true

# Support of IP multicast (for SNMP or cluster management/messaging
# requests etc)
# http://projects.unbit.it/uwsgi/wiki/uwsgiProtocol
#
# = <bool>
multicast = true

# Regular expression support with help of PCRE (Perl Compatible Regular
# Expressions) library
#
# As for uWSGI 0.9.8 this is no-op option
# In automatic mode enabling of option is based on presence and output of
# pcre-config executable
#
# = auto/<bool>
pcre = true

ssl = true

# Path to directory where uWSGI searches for plugins (i.e. appropriate shared
# libraries)
#
# = <string>
plugin_dir = /usr/lib/uwsgi/plugins

# List of plugins to compile into external shared libraries
#
# = <list>/false
plugins = false

# Support for routing
#
# = auto/<bool>
routing = auto

# Support of possibility to serve static file via sendfile()
#
# = <bool>
sendfile = true

# Embed a tiny SNMP server
# http://projects.unbit.it/uwsgi/wiki/UseSnmp
#
# = <bool>
snmp = true

# Support of spooler (queue manager that works very similar to a printing/mail
# system, useful for managing long running task)
# http://projects.unbit.it/uwsgi/wiki/Spooler
#
# = <bool>
spooler = true

# Support for configuration in SQLite3 database
#
# = <bool>/auto
sqlite3 = true

# Threaded operational mode support
#
# = <bool>
threading = true

# Timer subsystem type
# Automatic choosing of timer subsystem is based on OS type
#
# = auto/timerfd/port/kqueue/none
timer = auto

# Support of UDP protocol (for binding to UDP socket, providing SNMP server,
# logging via UDP, IP multicast, ...)
# http://projects.unbit.it/uwsgi/wiki/uwsgiProtocol
#
# = <bool>
udp = true

# Support for configuration files in XML format
#
# = libxml2/expat
xml = libxml2

# Support for configuration files in YAML format
#
# In automatic mode enabling of option is based on presence of yaml.h header
# file.
#
# When option value is set to false, internal uWSGI YAML parser will be used.
#
# = auto/libyaml/false
yaml = libyaml

# Include Unbit-specific features
#
# Unbit S.a.s. (unbit.it) is the hosting company that started (and continuing)
# uWSGI development. Unbit-specific features are small changes introduced for
# supporting Unbit infrastucture. They are supposed to be of no interest to
# anybody else but Unbit.
#
# = <bool>
unbit = false

# Support of ZeroMQ transport layer
#
# http://projects.unbit.it/uwsgi/wiki/Mongrel2
# http://projects.unbit.it/uwsgi/wiki/ZeroMQLogging
#
# = <bool>/auto
zeromq = auto

# 'python' section contains options for building Python language bridge plugin
#
# As for uWSGI 0.9.8 options in 'python' section are meaningless and not used
# in plugin building process.
[python]
paste = true
web3 = true
